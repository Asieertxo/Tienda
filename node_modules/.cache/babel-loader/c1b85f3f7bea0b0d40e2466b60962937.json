{"ast":null,"code":"export const TYPES = {\n  add: \"add\",\n  remove: \"remove\",\n  clear: \"clear\"\n};\nexport function reducerCart(state, action) {\n  const incart = JSON.parse(localStorage.getItem('cart'));\n  console.log;\n\n  switch (action.type) {\n    case TYPES.add:\n      {\n        let itemcart = incart.ObjectID.find(item => item.ObjectID === action.payload.ObjectID);\n        console.log(state);\n        console.log(itemcart);\n        return [...state, action.payload];\n      }\n\n    case TYPES.remove:\n      {}\n\n    case TYPES.clear:\n      {}\n\n    default:\n      return state;\n  }\n}\nexport const initialState = [];","map":{"version":3,"sources":["/home/oem/projects/Tienda/src/reducers/cartReducer.js"],"names":["TYPES","add","remove","clear","reducerCart","state","action","incart","JSON","parse","localStorage","getItem","console","log","type","itemcart","ObjectID","find","item","payload","initialState"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG;AACnBC,EAAAA,GAAG,EAAK,KADW;AAEnBC,EAAAA,MAAM,EAAE,QAFW;AAGnBC,EAAAA,KAAK,EAAG;AAHW,CAAd;AAMP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EAAkC;AAEvC,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR;;AAEA,UAAOP,MAAM,CAACQ,IAAd;AACE,SAAKd,KAAK,CAACC,GAAX;AAAe;AACb,YAAIc,QAAQ,GAAGR,MAAM,CAACS,QAAP,CAAgBC,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACF,QAAL,KAAkBV,MAAM,CAACa,OAAP,CAAeH,QAA9D,CAAf;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AAEA,eAAO,CAAC,GAAGV,KAAJ,EAAWC,MAAM,CAACa,OAAlB,CAAP;AACD;;AACD,SAAKnB,KAAK,CAACE,MAAX;AAAkB,OAEjB;;AACD,SAAKF,KAAK,CAACG,KAAX;AAAiB,OAEhB;;AACD;AACE,aAAOE,KAAP;AAfJ;AAiBD;AAED,OAAO,MAAMe,YAAY,GAAG,EAArB","sourcesContent":["export const TYPES = {\n  add:    \"add\",\n  remove: \"remove\",\n  clear:  \"clear\",\n};\n\nexport function reducerCart(state,action){\n\n  const incart = JSON.parse(localStorage.getItem('cart'));\n  console.log\n\n  switch(action.type){\n    case TYPES.add:{\n      let itemcart = incart.ObjectID.find(item => item.ObjectID === action.payload.ObjectID);\n      console.log(state)\n      console.log(itemcart)\n\n      return [...state, action.payload]\n    }\n    case TYPES.remove:{\n\n    }\n    case TYPES.clear:{\n\n    }\n    default:\n      return state;\n  }\n}\n\nexport const initialState = [];"]},"metadata":{},"sourceType":"module"}