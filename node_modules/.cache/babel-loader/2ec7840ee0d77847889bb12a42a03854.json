{"ast":null,"code":"import { isContentEditable } from \"@testing-library/user-event/dist/utils\";\nexport const TYPES = {\n  add: \"add\",\n  remove: \"remove\",\n  clear: \"clear\"\n};\nexport function reducerCart(state, action) {\n  switch (action.type) {\n    case TYPES.add:\n      {\n        let incart;\n        state.map(function (item) {\n          //console.log('ID:',item.ObjectID)\n          //console.log('IDD:',action.payload.ObjectID)\n          if (item.ObjectID == action.payload.ObjectID) {\n            console.log('ID duplicate');\n            incart = true;\n            return incart;\n          } else {\n            console.log('ID no duplicate');\n            incart = false;\n            return incart;\n          }\n        });\n        console.log(incart);\n\n        if (incart == true) {\n          return [...state, action.payload];\n        } else {\n          return [...state];\n        }\n      }\n\n    case TYPES.remove:\n      {}\n\n    case TYPES.clear:\n      {}\n\n    default:\n      return state;\n  }\n}\nexport const initialState = [];","map":{"version":3,"sources":["/home/oem/projects/Tienda/src/reducers/cartReducer.js"],"names":["isContentEditable","TYPES","add","remove","clear","reducerCart","state","action","type","incart","map","item","ObjectID","payload","console","log","initialState"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,wCAAlC;AAEA,OAAO,MAAMC,KAAK,GAAG;AACnBC,EAAAA,GAAG,EAAK,KADW;AAEnBC,EAAAA,MAAM,EAAE,QAFW;AAGnBC,EAAAA,KAAK,EAAG;AAHW,CAAd;AAMP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EAAkC;AAEvC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,KAAK,CAACC,GAAX;AAAe;AACb,YAAIO,MAAJ;AACAH,QAAAA,KAAK,CAACI,GAAN,CAAU,UAAUC,IAAV,EAAe;AACvB;AACA;AACA,cAAGA,IAAI,CAACC,QAAL,IAAiBL,MAAM,CAACM,OAAP,CAAeD,QAAnC,EAA4C;AAC1CE,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAN,YAAAA,MAAM,GAAG,IAAT;AACA,mBAAOA,MAAP;AACD,WAJD,MAIK;AACHK,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAN,YAAAA,MAAM,GAAG,KAAT;AACA,mBAAOA,MAAP;AACD;AACF,SAZD;AAaAK,QAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AACA,YAAGA,MAAM,IAAI,IAAb,EAAkB;AAChB,iBAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACM,OAAlB,CAAP;AACD,SAFD,MAEK;AACH,iBAAO,CAAC,GAAGP,KAAJ,CAAP;AACD;AACF;;AACD,SAAKL,KAAK,CAACE,MAAX;AAAkB,OAEjB;;AACD,SAAKF,KAAK,CAACG,KAAX;AAAiB,OAEhB;;AACD;AACE,aAAOE,KAAP;AA9BJ;AAgCD;AAED,OAAO,MAAMU,YAAY,GAAG,EAArB","sourcesContent":["import { isContentEditable } from \"@testing-library/user-event/dist/utils\";\n\nexport const TYPES = {\n  add:    \"add\",\n  remove: \"remove\",\n  clear:  \"clear\",\n};\n\nexport function reducerCart(state,action){\n\n  switch(action.type){\n    case TYPES.add:{\n      let incart\n      state.map(function (item){\n        //console.log('ID:',item.ObjectID)\n        //console.log('IDD:',action.payload.ObjectID)\n        if(item.ObjectID == action.payload.ObjectID){\n          console.log('ID duplicate')\n          incart = true\n          return incart        \n        }else{\n          console.log('ID no duplicate')\n          incart = false\n          return incart\n        }\n      })\n      console.log(incart)\n      if(incart == true){\n        return [...state, action.payload]\n      }else{\n        return [...state]\n      }\n    }\n    case TYPES.remove:{\n\n    }\n    case TYPES.clear:{\n\n    }\n    default:\n      return state;\n  }\n}\n\nexport const initialState = [];"]},"metadata":{},"sourceType":"module"}