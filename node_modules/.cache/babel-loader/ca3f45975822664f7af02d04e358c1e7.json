{"ast":null,"code":"export const TYPES = {\n  add: \"add\",\n  del: \"del\",\n  clear: \"clear\"\n};\nexport function reducerCart(state, action) {\n  switch (action.type) {\n    case TYPES.add:\n      {\n        let incart = false;\n        state.map(function (item) {\n          if (item.ObjectID == action.payload.ObjectID) {\n            incart = true;\n            return incart;\n          }\n        });\n\n        if (incart == false) {\n          return [...state, { ...action.payload,\n            quantity: 1\n          }];\n        } else {\n          return [...state.map(item => item.ObjectID === action.payload.ObjectID ? { ...item,\n            quantity: item.quantity + 1\n          } : item)];\n        }\n      }\n\n    case TYPES.del:\n      {\n        let incart = false;\n        state.map(function (item) {\n          if (item.ObjectID == action.payload.ObjectID) {\n            incart = true;\n            return incart;\n          }\n        });\n\n        if (incart == false) {\n          return [...state, action.payload];\n        } else {\n          return;\n          [...state.map(item => item.ObjectID === action.payload.ObjectID ? { ...item,\n            quantity: item.quantity - 1\n          } : item)];\n        }\n      }\n\n    case TYPES.clear:\n      {}\n\n    default:\n      return state;\n  }\n}\nexport const initialState = [];","map":{"version":3,"sources":["/home/oem/projects/Tienda/src/reducers/cartReducer.js"],"names":["TYPES","add","del","clear","reducerCart","state","action","type","incart","map","item","ObjectID","payload","quantity","initialState"],"mappings":"AACA,OAAO,MAAMA,KAAK,GAAG;AACnBC,EAAAA,GAAG,EAAK,KADW;AAEnBC,EAAAA,GAAG,EAAK,KAFW;AAGnBC,EAAAA,KAAK,EAAG;AAHW,CAAd;AAMP,OAAO,SAASC,WAAT,CAAqBC,KAArB,EAA2BC,MAA3B,EAAkC;AAEvC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKP,KAAK,CAACC,GAAX;AAAe;AACb,YAAIO,MAAM,GAAG,KAAb;AACAH,QAAAA,KAAK,CAACI,GAAN,CAAU,UAAUC,IAAV,EAAe;AACvB,cAAGA,IAAI,CAACC,QAAL,IAAiBL,MAAM,CAACM,OAAP,CAAeD,QAAnC,EAA4C;AAC1CH,YAAAA,MAAM,GAAG,IAAT;AACA,mBAAOA,MAAP;AACD;AACF,SALD;;AAMA,YAAGA,MAAM,IAAI,KAAb,EAAmB;AACjB,iBAAO,CAAC,GAAGH,KAAJ,EAAW,EAAC,GAAGC,MAAM,CAACM,OAAX;AAAoBC,YAAAA,QAAQ,EAAC;AAA7B,WAAX,CAAP;AACD,SAFD,MAEK;AACH,iBAAO,CAAC,GAAGR,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACM,OAAP,CAAeD,QAAjC,GAA4C,EAAC,GAAGD,IAAJ;AAAUG,YAAAA,QAAQ,EAACH,IAAI,CAACG,QAAL,GAAe;AAAlC,WAA5C,GAAiFH,IAAnG,CAAJ,CAAP;AACD;AACF;;AAGD,SAAKV,KAAK,CAACE,GAAX;AAAe;AACb,YAAIM,MAAM,GAAG,KAAb;AACAH,QAAAA,KAAK,CAACI,GAAN,CAAU,UAAUC,IAAV,EAAe;AACvB,cAAGA,IAAI,CAACC,QAAL,IAAiBL,MAAM,CAACM,OAAP,CAAeD,QAAnC,EAA4C;AAC1CH,YAAAA,MAAM,GAAG,IAAT;AACA,mBAAOA,MAAP;AACD;AACF,SALD;;AAMA,YAAGA,MAAM,IAAI,KAAb,EAAmB;AACjB,iBAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACM,OAAlB,CAAP;AACD,SAFD,MAEK;AACH;AACA,WAAC,GAAGP,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBL,MAAM,CAACM,OAAP,CAAeD,QAAjC,GAA4C,EAAC,GAAGD,IAAJ;AAAUG,YAAAA,QAAQ,EAACH,IAAI,CAACG,QAAL,GAAe;AAAlC,WAA5C,GAAiFH,IAAnG,CAAJ;AACD;AAEF;;AACD,SAAKV,KAAK,CAACG,KAAX;AAAiB,OAEhB;;AACD;AACE,aAAOE,KAAP;AArCJ;AAuCD;AAED,OAAO,MAAMS,YAAY,GAAG,EAArB","sourcesContent":["\nexport const TYPES = {\n  add:    \"add\",\n  del:    \"del\",\n  clear:  \"clear\",\n};\n\nexport function reducerCart(state,action){\n\n  switch(action.type){\n    case TYPES.add:{\n      let incart = false\n      state.map(function (item){\n        if(item.ObjectID == action.payload.ObjectID){\n          incart = true\n          return incart      \n        }\n      })\n      if(incart == false){\n        return [...state, {...action.payload, quantity:1}]\n      }else{\n        return [...state.map(item => item.ObjectID === action.payload.ObjectID ? {...item, quantity:item.quantity +1}:item)]\n      }\n    }\n\n\n    case TYPES.del:{\n      let incart = false\n      state.map(function (item){\n        if(item.ObjectID == action.payload.ObjectID){\n          incart = true\n          return incart      \n        }\n      })\n      if(incart == false){\n        return [...state, action.payload]\n      }else{\n        return \n        [...state.map(item => item.ObjectID === action.payload.ObjectID ? {...item, quantity:item.quantity -1}:item)]\n      }\n\n    }\n    case TYPES.clear:{\n\n    }\n    default:\n      return state;\n  }\n}\n\nexport const initialState = [];"]},"metadata":{},"sourceType":"module"}