{"ast":null,"code":"var _jsxFileName = \"/home/alumno/projects/Hotel-React/src/components/List.js\";\nimport Item from \"./Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst list = [{\n  title: 'React',\n  url: 'https://reactjs.org/',\n  author: 'Jordan Walke',\n  num_comments: 3,\n  points: 4,\n  ObjectID: 0\n}, {\n  title: 'Redux',\n  url: 'https://redux.js.org/',\n  author: 'Dan Abramov, Andrew Clark',\n  num_comments: 2,\n  points: 5,\n  ObjectID: 1\n}];\n\nfunction List() {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: list.map(function (item) {\n      return (\n        /*#__PURE__*/\n\n        /*Le pasamos el objeto item al componente*/\n        _jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Item, {\n            item: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, item.ObjectID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      );\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = List;\nexport default List; //Otra forma de hacerlo sin usar el map, poner nombre abajo y listo\n\n/*const items = [];\nfor (const item of list){\n  items.push(\n    <li key={item.ObjectID}>\n      <span>\n        <a href={item.url}>{item.title}</a>\n      </span>\n      <span>{item.author}</span>\n      <span>{item.num_comments}</span>\n      <span>{item.points}</span>\n    </li>\n  )\n}*/\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/alumno/projects/Hotel-React/src/components/List.js"],"names":["Item","list","title","url","author","num_comments","points","ObjectID","List","map","item"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,KAAK,EAAG,OADV;AAEEC,EAAAA,GAAG,EAAC,sBAFN;AAGEC,EAAAA,MAAM,EAAE,cAHV;AAIEC,EAAAA,YAAY,EAAE,CAJhB;AAKEC,EAAAA,MAAM,EAAE,CALV;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CADW,EASX;AACEL,EAAAA,KAAK,EAAG,OADV;AAEEC,EAAAA,GAAG,EAAC,uBAFN;AAGEC,EAAAA,MAAM,EAAE,2BAHV;AAIEC,EAAAA,YAAY,EAAE,CAJhB;AAKEC,EAAAA,MAAM,EAAE,CALV;AAMEC,EAAAA,QAAQ,EAAE;AANZ,CATW,CAAb;;AAmBA,SAASC,IAAT,GAAgB;AACd,sBACE;AAAA,cACGP,IAAI,CAACQ,GAAL,CAAS,UAAUC,IAAV,EAAgB;AACxB;AAAA;;AAAQ;AACN;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF,WAASA,IAAI,CAACH,QAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAKD,KANA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQC,I;AAcT,eAAeA,IAAf,C,CAMA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Item from \"./Item\";\n\nconst list = [\n  {\n    title : 'React',\n    url:'https://reactjs.org/',\n    author: 'Jordan Walke',\n    num_comments: 3,\n    points: 4,\n    ObjectID: 0,\n  },\n  {\n    title : 'Redux',\n    url:'https://redux.js.org/',\n    author: 'Dan Abramov, Andrew Clark',\n    num_comments: 2,\n    points: 5,\n    ObjectID: 1,\n  }\n];\n\nfunction List() {\n  return (\n    <ul>\n      {list.map(function (item) {\n        return (/*Le pasamos el objeto item al componente*/\n          <li key={item.ObjectID}>\n            <Item item={item}/>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default List;\n\n\n\n\n\n//Otra forma de hacerlo sin usar el map, poner nombre abajo y listo\n\n/*const items = [];\nfor (const item of list){\n  items.push(\n    <li key={item.ObjectID}>\n      <span>\n        <a href={item.url}>{item.title}</a>\n      </span>\n      <span>{item.author}</span>\n      <span>{item.num_comments}</span>\n      <span>{item.points}</span>\n    </li>\n  )\n}*/"]},"metadata":{},"sourceType":"module"}